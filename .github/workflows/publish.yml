name: "Publish PKG to NPM"

on:
  workflow_dispatch:
    inputs:
      release:
        type: choice
        description: "Version to publish: v[MAJOR].[MINOR].[PATCH]-[PRE-RELEASE].X"
        required: true
        options:
          - pre-release
          - patch
          - minor
          - major

env:
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  GITHUB_EMAIL: ${{ secrets.GH_EMAIL }}

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: "⚙ Set up Node.js"
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      - name: "✅ Checkout repository"
        uses: actions/checkout@v2

  publish:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: "💾 Restore Dependencies from cache"
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: "📦 Install Dependencies"
        run: npm install

      - name: "🔦 Lint"
        run: npm run lint

      - name: "🔨 Build"
        run: npm run build

      - name: "👨‍💻 Run Test"
        run: npm run test
        env:
          NODE_ENV: 'test'

      - name: "🎉 Publish NPM PKG as ${{ github.event.inputs.release }} version"
        run: |
          git config --global user.name "GitHub CD bot"
          git config --global user.email "${GITHUB_EMAIL}"
          if ${{github.event.inputs.release == 'pre-release'}}; then
            npm run release -- --prerelease alpha
          else
            npm run release -- --release-as ${{github.event.inputs.release}}
          fi
          npm run build
          cd ./pkg
          npm config set '//registry.npmjs.org/:_authToken' "${NODE_AUTH_TOKEN}"
          npm publish --access public
          cd ..
          git push --follow-tags origin master
          echo "LATEST_TAG=$(git describe --abbrev=0 --tags)" >> $GITHUB_ENV

      - name: "📄 Create Changelog"
        uses: Bullrich/generate-release-changelog@master
        id: Changelog
        env:
          REPO: ${{ github.repository }}

      - name: "🚀 Publish Release: ${{env.LATEST_TAG}}"
        uses: actions/create-release@v1
        with:
          tag_name: "${{env.LATEST_TAG}}"
          release_name: "${{env.LATEST_TAG}}"
          body: |
            ${{ steps.Changelog.outputs.changelog }}
            
            ---
            
            > 💬 All notable changes to this project will be documented in [Changelog](${{ github.event.repository.html_url }}/blob/master/CHANGELOG.md) file.
          draft: false
          prerelease: ${{ github.event.inputs.release == 'pre-release' }}
